package main

import (
	"encoding/hex"
	"fmt"
	"log"

	//"github.wdf.sap.corp/velocity/passport"

	//	"github.wdf.sap.corp/velocity/passport"

	"github.wdf.sap.corp/velocity/passport/v5"
)

func main() {
	dipassport := "2A54482A0300E6890A3130373840303030303030303030373938313233343536000000000000000000000000000000000000000000000000000000000000000000000000000000000000005341505F444154415F494E54454C4C4947454E43455F524551554553540000000000000000000000000B313037384030303030303030303037393831323334353600000000000000000033343531424332463630373134393642423837424641333032453235353333460000000436F09E9C0D937A49E8BDDB7D8A0CFC1FEE0000000000000000000000000000000000000001000000002A54482A"
	log.Printf("length is %d", len(dipassport))
	//ps := "2A54482A03010D890A5341505F4532455F54415F506C7567496E20202020202020202020202020202000005341505F4532455F54415F5573657220202020202020202020202020202020205341505F4532455F54415F526571756573742020202020202020202020202020202020202020202000055341505F4532455F54415F506C7567496E2020202020202020202020202020203334303238363037433939323145443539463937304530353641363943323832202020000734028607C9921ED59F970E056A69A2820000000000000000000000000000000000000000000100E22A54482A0100270100020003000200010400085800020002040008300002000302000B000000002A54482A"
	passportExample, _ := hex.DecodeString(dipassport

	p, err := passport.Deserialize(passportExample)
	if err != nil {
		panic(err)
	}

	//rootContextID := p.RootContextID()
	//ContextID := hex.EncodeToString(rootContextID)
	//cid, _ := uuid.Parse(uuid.NewString())
	//connectID, _ := cid.MarshalBinary()
	//p, _ = p.WithConnectionID(connectID)
	//ConnectionID := hex.EncodeToString(p.ConnectionID())
	pb := p.Serialize()
	psString := hex.EncodeToString(pb)
	fmt.Printf("2passport==== is %s\n", psString)
	NewPa, _ := hex.DecodeString(psString)
	p2, err := passport.Deserialize(NewPa)
	fmt.Printf("2passport is %v\n", p2)
	fmt.Printf("pass string %s\n", psString)
	//fmt.Printf("ContextID is %s \n", ContextID)
	//fmt.Printf("ConnectionID is %s \n", ConnectionID)

	fmt.Println(p)
	//connectionByte,_:=hex.DecodeString("000C29B226AB1EDBB5F9DB9E3ADCB8CF")
	//fmt.Printf("ConnectionID is %s \n",string(connectionByte))
	//p.Update("New Component")
	//fmt.Println(p)

}
